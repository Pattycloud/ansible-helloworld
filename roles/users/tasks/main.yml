---
# tasks file for users
- name:  Create groups
  group:
    name:  "{{ item }}"
    state: present
  loop:  "{{ usergroups }}"

- name:  Install shells
  apt:
    name:  "{{ item }}"
    state: present
    update_cache: true
  with_items:  "{{ shells }}"

# Create users for production servers
- block:
  - name:  Create users for production servers
    user:
      name:  "{{ item.name }}"
      state: present
      groups: "{{ item.groups }}"
      shell:  "{{ item.shell }}"
    loop:  "{{ users }}"
  - name:  Create authorized_keys for production server users
    authorized_key:
      user:  "{{ item.name }}"
      state: present
      key: "{{ lookup('file', '{{ ssh_keys/item.name }}') }}"
    loop:  "{{ users }}"
  when:
    - "'production' in group_names"
    - "('architects' in item.groups) or
       ('operations' in item.groups)"

# Create users for staging servers
- block:
  - name:  Create users for staging servers
    user:
      name:  "{{ item.name }}"
      state: present
      groups: "{{ item.groups }}"
      shell:  "{{ item.shell }}"
    loop:  "{{ users }}"
  - name:  Create authorized_keys for staging server users
    authorized_key:
      user:  "{{ item.name }}"
      state: present
      key: "{{ lookup('file', 'ssh_keys/{{ item.name }}') }}"
    loop:  "{{ users }}"
  when:
    - "'staging' in group_names"
    - "('architects' in item.groups) or
       ('operations' in item.groups) or
       ('developers' in item.groups) or
       ('testers'    in item.groups)"


- block:
  - name: Allow 'developers' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%developers'
      line: '%developers ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    when: "'staging' in group_names"

# Delete users
- name:  Delete users in deletedusers list
  user:
    name:  "{{ item.name }}"
    state: absent
  loop:  "{{ deletedusers }}"

# Delete groups
- name:  Delete groups in deletedgroups list
  group:
    name:  "{{ item.name }}"
    state: absent
  loop:  "{{ deletedgroups }}"
